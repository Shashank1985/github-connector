[project]
name = "github-extractor"
version = "0.1.0"
description = "Github metadata extractor app built using Atlan Application SDK"
authors = [{ name = "Shashank Shashidhar", email = "shashankshashidhar73@gmail.com" }]
requires-python = ">=3.11"
license = "Apache-2.0"
readme = "README.md"
dependencies = [
    "atlan-application-sdk[daft,tests,workflows]==0.1.1rc38",
    "poethepoet",
    "pyatlan",
    "fastapi",
    "pandas",
    "dapr",
    "temporalio",
    "yake>=0.6.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.1.1",
    "pytest-mock>=3.15.0",
]

[dependency-groups]
dev = [
    "pytest",
    "pytest-asyncio",
    "coverage",
    "pre-commit",
]

[tool.poe.tasks]
start-dapr = "dapr run --enable-api-logging --log-level debug --app-id main --app-port 8000 --dapr-http-port 3500 --dapr-grpc-port 50001  --resources-path components"
start-temporal = "temporal server start-dev --db-filename ./temporal.db"
start-deps.shell = "poe start-dapr & poe start-temporal &"
stop-deps.shell = "lsof -ti:3000,3500,7233,50001 | xargs kill -9 2>/dev/null || true"

[tool.poe.tasks.download-components]
interpreter = "python"
env = { SDK_VERSION = "v0.1.1rc38" }
shell = """
import pathlib, requests, os

components_dir = pathlib.Path("components")
components_dir.mkdir(exist_ok=True)

api_url = "https://api.github.com/repos/atlanhq/application-sdk/contents/components"

response = requests.get(api_url, params={"ref": os.getenv("SDK_VERSION")})
response.raise_for_status()

for file_info in response.json():
    if file_info["type"] == "file" and file_info["name"].endswith(".yaml"):
        raw_url = file_info["download_url"]

        file_response = requests.get(raw_url)
        file_response.raise_for_status()

        file_path = components_dir / file_info["name"]
        file_path.write_text(file_response.text)
        print(f"Downloaded: {file_info['name']}")
"""

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::pydantic.warnings.PydanticDeprecatedSince20"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = ["./**/*.py"]

[tool.hatch.build.targets.wheel]
include = ["./**/*.py"]
packages = [
    "app"
]
